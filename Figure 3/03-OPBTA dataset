#### Libraries ####
set.seed(123)                                                                    
library(openxlsx)                                                                
library(ggplot2) 
library("ggpubr")
library(dplyr)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
                      conf.interval=.95, .drop=TRUE) {
  library(plyr)
  # New version of length which can handle NA's: if na.rm==T, don't count them
  length2 <- function (x, na.rm=FALSE) {
    if (na.rm) sum(!is.na(x))
    else       length(x)
  }
  # This does the summary. For each group's data frame, return a vector with
  # N, mean, and sd
  datac <- plyr::ddply(data, groupvars, .drop=.drop,
                 .fun = function(xx, col) {
                   c(N    = length2(xx[[col]], na.rm=na.rm),
                     mean = mean   (xx[[col]], na.rm=na.rm),
                     sd   = sd     (xx[[col]], na.rm=na.rm),
                     median = median   (xx[[col]], na.rm=na.rm) 
                   )
                 },
                 measurevar              
  )
  # Rename the "mean" column   
  datac <- plyr::rename(datac, c("mean" = measurevar))
  datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
  # Confidence interval multiplier for standard error
  # Calculate t-statistic for confidence interval:
  # e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
  ciMult <- qt(conf.interval/2 + .5, datac$N-1)
  datac$ci <- datac$se * ciMult
  return(datac)
}

###########################                                                                            
#### Import data table ####
###########################
dat1 <- openxlsx::read.xlsx(".../Suppl. Table 13.xlsx")   

###################################
#### Boxplot by broad entities ####
###################################
dat2 <- dat1
dat2 <- dat2 %>% filter(broad_type != "NA")
dat3 <- dat2 %>% filter(broad_type == "LGG")

###OIS_UP RNAseq signature####
pdat_summary <- summarySE(dat2, measurevar = "OIS_UP..RNAseq.only.", groupvars = "broad_type") 
dat2$broad_type_NEW<- factor(dat2$broad_type, levels=c(pdat_summary[order(pdat_summary$median),"broad_type"]))

dat2$OIS_UP..RNAseq.only. <- scale(dat2$OIS_UP..RNAseq.only.)
dat3$OIS_UP..RNAseq.only. <- scale(dat3$OIS_UP..RNAseq.only.)

median_dataset <- median(dat2$OIS_UP..RNAseq.only.)
median_pLGG <- median(dat3$OIS_UP..RNAseq.only.)

for (i in unique(dat2$broad_type_NEW)) {
  dat2[dat2$broad_type_NEW == i, "color"] <- ifelse(median(dat2[dat2$broad_type_NEW == i, "OIS_UP..RNAseq.only."]) < median_dataset, 0,1)
}

tiff(".../01-OIS_UP..RNAseq.only.Full cohort.tiff", 
     width = 9.5, height = 6.5, unit = "cm", res=300)
ggplot(data = dat2, aes(x = broad_type_NEW, y = OIS_UP..RNAseq.only., fill = as.factor(color)))+  
  geom_hline(yintercept= median_dataset, linetype="dashed", color = "black", size=0.5)+
  #geom_hline(yintercept= median_pLGG, linetype="dashed", color = "orange", size=0.5)+
  stat_boxplot(geom = "errorbar", width = 0.2)+
  geom_boxplot(outlier.shape = NA, aes(x = broad_type_NEW, y = OIS_UP..RNAseq.only.))+
  geom_boxplot(outlier.shape = NA, data=dat2[dat2$broad_type_NEW=="LGG",],
               aes(x = broad_type_NEW, y = OIS_UP..RNAseq.only.),fill="orange")+                                             
  geom_jitter(position = position_jitter(width = 0.2), color = "grey", size = 0.1)+         
  labs(y= "OIS_UP_RNAseq \n(ssGSEA z-score)", x = NULL)+
  scale_fill_manual(values = c("white", "white"))+
  scale_x_discrete(labels=c("EWS" = "EWS\n(n=11)",               
                            "MB" = "MB\n(n=122)",
                            "CNS" = "CNS\n(n=18)",
                            "NB" = "NB\n(n=5)",
                            "Normal Tissue" = "Normal Tissue\n(n=2)",
                            "EPN" = "EPN\n(n=93)",
                            "ETMR" = "ETMR\n(n=6)",
                            "SEGA" = "SEGA\n(n=13)",
                            "CHDM" = "CHDM\n(n=6)", 
                            "CRANIO" = "CRANIO\n(n=36)",
                            "HGG" = "HGG\n(n=121)",
                            "GNT" = "GNT\n(n=38)",             
                            "DMG" = "DMG\n(n=68)",
                            "LGG" = "LGG\n(n=285)"))+
  theme(legend.text=element_text(size= 6),
        legend.title=element_text(size=6))+ 
  theme(axis.title.x = element_text(size = 6))+
  theme(axis.title.y = element_text(size = 6))+
  theme(axis.text.x = element_text(size = 6, color = "black"))+
  theme(axis.text.y = element_text(size = 6, color = "black", angle = 45),
        axis.text.x = element_text(angle = 45,vjust = 1, hjust=1)) +
  guides(fill = "none")
dev.off()

aov_pdat <- aov(OIS_UP..RNAseq.only.~broad_type_NEW, dat2) 
summary(aov_pdat)
Stat_summary<-TukeyHSD(aov_pdat)
Stat_summary2 <-as.data.frame(Stat_summary[[1]])
Stat_summary2[Stat_summary2$'p adj'<0.05, ]


##########################################
#### Boxplot pLGG only by MAPK alteration type####
##########################################
dat2 <- dat1 %>% filter(MAPK_alt_status != "NA" & MAPK_alt_status != "H3" & 
                          MAPK_alt_status != "IDH" & MAPK_alt_status != "MYB/MYBL1")
dat2 <- dat2 %>% filter(broad_type == "LGG" | broad_type == "Normal Tissue")

####OIS_UP RNA seq signature####
pdat_summary <- summarySE(dat2, measurevar = "OIS_UP..RNAseq.only.", groupvars = "MAPK_Alt_Type") 
dat2$primary_site_NEW<- factor(dat2$MAPK_Alt_Type, levels=c(pdat_summary[order(pdat_summary$median),"MAPK_Alt_Type"]))

dat2$OIS_UP..RNAseq.only. <- scale(dat2$OIS_UP..RNAseq.only.)

median_dataset <- median(dat2$OIS_UP..RNAseq.only.)

tiff(".../03-OIS_UP..RNAseq.only_By alteration.tiff", 
     width = 9, height = 7, unit = "cm", res=300)

ggplot(data = dat2, aes(x = primary_site_NEW, y = OIS_UP..RNAseq.only., fill=primary_site_NEW))+               
  stat_boxplot(geom = "errorbar", width = 0.2)+
  geom_boxplot(outlier.shape = NA, aes(x = primary_site_NEW, y = OIS_UP..RNAseq.only.))+                                             
  geom_jitter(position = position_jitter(width = 0.2), color = "grey", size = 0.2)+
  geom_hline(yintercept= median_dataset, linetype="dashed", color = "black", size = 0.3)+
  labs(y= "OIS_UP_RNAseq \n(ssGSEA z-score)", x = NULL)+ 
  scale_fill_manual(breaks = c("MAPK wild-type" ,"RTK","FGFR","NF1",
                               "other MAPK","KIAABRAF" ,"BRAF V600E","BRAF V600E, CDKN2A/B", "Normal Tissue", "NTRK", "NF1, FGFR"),
                    values = c("#A6CEE3", "#1F78B4", "#B2DF8A", "#33A02C", "#FB9A99", "#E31A1C",
                               "#FDBF6F", "#FF7F00", "#CAB2D6", "#6A3D9A", "#FFFF99"))+ 
  scale_x_discrete(labels=c("MAPK wild-type" = "MAPK wild type\n(n=63)", 
                            "RTK" = "RTK alteration\n(n=8)",               
                            "FGFR" = "FGFR alteration\n(n=9)",               
                            "NF1" = "NF1\n(n=10)",               
                            "Other MAPK" = "Other MAPK\n(n=17)",               
                            "KIAA1549-BRAF" = "KIAA:BRAF fusion \n(n=120)",               
                            "BRAF V600E" = "BRAFV600E mutation\n(n=38)",               
                            "BRAF V600E, CDKN2A/B" = "BRAFV600E, CDKN2A/B del\n(n=6)",
                            "Normal Tissue" = "Normal Tissue\n(n=2)",
                            "NTRK" = "NTRK fusions\n(n=6)",
                            "NF1, FGFR" = "NF1, FGFR\n(n=4)"))+
  theme(legend.text=element_text(size= 6),
        legend.title=element_text(size=6))+ 
        #panel.grid = element_blank(),
        #panel.border = element_blank(),
        #axis.line = element_line(colour = "black", size = 0.3))+
  theme(axis.title.x = element_text(size = 6))+
  theme(axis.title.y = element_text(size = 6))+
  theme(axis.text.x = element_text(size = 6, color = "black"))+
  theme(axis.text.y = element_text(size = 6, color = "black", angle = 45),
        axis.text.x = element_text(angle = 45,vjust = 1, hjust=1)) +
  guides(fill = "none")
dev.off()

aov_pdat <- aov(OIS_UP..RNAseq.only.~primary_site_NEW, dat2) 
summary(aov_pdat)
Stat_summary<-TukeyHSD(aov_pdat)
Stat_summary2 <-as.data.frame(Stat_summary[[1]])
Stat_summary2[Stat_summary2$'p adj'<0.05, ]

##########################################
#### Boxplot pLGG only by Histology type####
##########################################
dat2 <- dat1 %>% filter(MAPK_alt_status != "NA" & MAPK_alt_status != "H3" & 
                          MAPK_alt_status != "IDH" & MAPK_alt_status != "MYB/MYBL1")
dat2 <- dat2 %>% filter(broad_type == "LGG")

pdat_summary <- summarySE(dat2, measurevar = "OIS_UP..RNAseq.only.", groupvars = "Harmonized_Diag") 
dat2$primary_site_NEW<- factor(dat2$Harmonized_Diag, levels=c(pdat_summary[order(pdat_summary$median),"Harmonized_Diag"]))

dat2$OIS_UP..RNAseq.only. <- scale(dat2$OIS_UP..RNAseq.only.)

median_dataset <- median(dat2$OIS_UP..RNAseq.only.)

tiff(".../04-OIS_UP..RNAseq.only_pLGG subtypes.tiff", 
     width = 9, height = 7, unit = "cm", res=300)

ggplot(data = dat2, aes(x = primary_site_NEW, y = OIS_UP..RNAseq.only., fill=primary_site_NEW))+               
  stat_boxplot(geom = "errorbar", width = 0.2)+
  geom_boxplot(outlier.shape = NA, aes(x = primary_site_NEW, y = OIS_UP..RNAseq.only.), fill = "orange")+                                             
  geom_jitter(position = position_jitter(width = 0.2), color = "grey", size = 0.2)+
  geom_hline(yintercept= median_dataset, linetype="dashed", color = "black", size = 0.3)+
  labs(y= "OIS_UP_RNAseq \n(ssGSEA z-score)", x = NULL)+ 
  scale_fill_manual(breaks = c("MAPK wild-type" ,"RTK","FGFR","NF1",
                               "other MAPK","KIAABRAF" ,"BRAF V600E","BRAF V600E, CDKN2A/B", "Normal Tissue", "NTRK", "NF1, FGFR"),
                    values = c("#A6CEE3", "#1F78B4", "#B2DF8A", "#33A02C", "#FB9A99", "#E31A1C",
                               "#FDBF6F", "#FF7F00", "#CAB2D6", "#6A3D9A", "#FFFF99"))+ 
  scale_x_discrete(labels=c("Oligodendroglioma" = "Oligodendroglioma\n(n=1)", 
                            "Ganglioglioma" = "Ganglioglioma\n(n=43)",               
                            "Pleomorphic xanthoastrocytoma" = "Pleomorphic xanthoastrocytoma\n(n=12)",               
                            "Pilocytic astrocytoma" = "Pilocytic astrocytoma\n(n=131)",               
                            "Low-grade glioma/astrocytoma" = "Low-grade glioma/astrocytoma\n(n=86)",               
                            "Diffuse fibrillary astrocytoma" = "Diffuse fibrillary astrocytoma\n(n=7)"))+
  theme(legend.text=element_text(size= 6),
        legend.title=element_text(size=6))+ 
  #panel.grid = element_blank(),
  #panel.border = element_blank(),
  #axis.line = element_line(colour = "black", size = 0.3))+
  theme(axis.title.x = element_text(size = 6))+
  theme(axis.title.y = element_text(size = 6))+
  theme(axis.text.x = element_text(size = 6, color = "black"))+
  theme(axis.text.y = element_text(size = 6, color = "black", angle = 45),
        axis.text.x = element_text(angle = 45,vjust = 1, hjust=1)) +
  guides(fill = "none")
dev.off()
